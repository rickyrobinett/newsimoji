import { OpenAPIRouteSchema, OpenAPISchema, RouteOptions, RouteValidated } from './types';
export declare class OpenAPIRoute implements OpenAPIRouteSchema {
    static isRoute: boolean;
    static schema: OpenAPISchema;
    params: RouteOptions;
    constructor(params: RouteOptions);
    static getSchema(): OpenAPISchema;
    get schema(): OpenAPISchema;
    getSchema(): OpenAPISchema;
    static getParsedSchema(): Record<any, any>;
    jsonResp(params: {
        data: Record<string, any>;
        status?: number;
    }): Response;
    handleValidationError(errors: Record<string, any>): Response;
    execute(...args: any[]): Promise<Response>;
    validateRequest(request: Request): Promise<RouteValidated>;
    handle(...args: any[]): Promise<Response | Record<string, any>>;
}
